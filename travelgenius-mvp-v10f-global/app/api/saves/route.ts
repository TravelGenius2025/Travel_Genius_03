import { NextResponse } from 'next/server'; import { getAdminClient } from '@/lib/supabaseAdmin'
export async function GET(req:Request){ const admin=getAdminClient(); const { searchParams }=new URL(req.url); const deviceId=searchParams.get('deviceId')||''; if(!admin) return NextResponse.json({error:'Supabase not configured'},{status:501}); if(!deviceId) return NextResponse.json({ data: [] }); const { data, error }=await admin.from('saves').select('id,item').eq('device_id',deviceId).order('created_at',{ascending:false}); if(error) return NextResponse.json({error:error.message},{status:500}); return NextResponse.json({ data }) }
export async function POST(req:Request){ const admin=getAdminClient(); if(!admin) return NextResponse.json({error:'Supabase not configured'},{status:501}); const body=await req.json().catch(()=>({})); const { deviceId, item } = body||{}; if(!deviceId||!item) return NextResponse.json({error:'Invalid payload'},{status:400}); const { error }=await admin.from('saves').insert({ device_id:deviceId, item }); if(error) return NextResponse.json({error:error.message},{status:500}); return NextResponse.json({ ok:true }) }
